# Generated by Django 2.0 on 2017-12-15 16:53

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import inventory_manager.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_created', models.DateTimeField(auto_created=True, default=datetime.datetime(2017, 12, 15, 18, 53, 34, 130519))),
                ('code', models.CharField(max_length=40, verbose_name='Αριθμός Παραστατικού')),
                ('status', models.CharField(choices=[('a', 'Ολοκληρώθηκε'), ('d', 'Δόσεις'), ('p', 'Σε αναμονή'), ('c', 'Ακυρώθηκε')], default='p', max_length=1, verbose_name='Σε εξέλιξη')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='')),
                ('total_price_no_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Αξία προ έκπτωσης')),
                ('total_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Αξία έκπτωσης')),
                ('total_price_after_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Αξία μετά την έκπτωση')),
                ('total_taxes', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Φ.Π.Α')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Τελική Αξία')),
                ('credit_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Πιστωτικό υπόλοιπο')),
                ('taxes_modifier', models.IntegerField(default=24, verbose_name='ΦΠΑ Τιμολογίου')),
            ],
            options={
                'verbose_name': 'Τιμολόγια   ',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount', models.IntegerField(default=0, verbose_name='Εκπτωση')),
                ('taxes', models.IntegerField(default=24, verbose_name='ΦΠΑ')),
                ('qty', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Ποσότητα')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Τιμή Μονάδας')),
                ('total_clean_value', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Συνολική Αξία χωρίς Φόρους')),
                ('total_value_with_taxes', models.DecimalField(decimal_places=2, default=0, max_digits=14, verbose_name='Συνολική Αξία με φόρους')),
                ('day_added', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Συστατικά Τιμολογίου   ',
                'ordering': ['product'],
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Υπόλοιπο')),
                ('content', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('for_site', models.BooleanField(default=True)),
                ('ordering', models.IntegerField(default=1)),
                ('order_cost', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Επιπλέον Κόστος Παραγγελίας')),
            ],
            options={
                'verbose_name_plural': 'Τρόποι πληρωμής',
                'ordering': ['ordering'],
            },
            managers=[
                ('my_query', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethodGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64, unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PayOrders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_created', models.DateField(auto_now_add=True, verbose_name='Ημερομηνία')),
                ('date_expired', models.DateField(verbose_name='Ημερομηνία Εξόφλησης')),
                ('receipt', models.CharField(default='---', max_length=64, verbose_name='Απόδειξη')),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Ποσό')),
                ('payment_type', models.CharField(choices=[('a', 'Αποπληρωμή Τιμολογίου'), ('b', 'Προκαταβολές'), ('c', 'Επιταγές')], default='b', max_length=1)),
                ('status', models.CharField(choices=[('a', 'Σε εξέλιξη'), ('b', 'Εισπράκτηκε'), ('c', 'Ακυρώθηκε')], default='a', max_length=1, verbose_name='Κατάσταση')),
            ],
            options={
                'verbose_name': 'Εντολές Πληρωμής',
            },
        ),
        migrations.CreateModel(
            name='PreOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('a', 'Active'), ('b', 'Used')], default='a', max_length=1)),
                ('day_added', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreOrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, max_digits=5)),
                ('day_added', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreOrderNewItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('qty', models.DecimalField(decimal_places=2, max_digits=6)),
                ('price_buy', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Τιμή Αγοράς')),
                ('discount_buy', models.IntegerField(default=0, verbose_name='Εκπτωση Τιμολογίου')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Τιμή Λιανικής')),
                ('sku', models.CharField(blank=True, max_length=50, null=True)),
                ('day_added', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreOrderStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('day_added', models.DateField(auto_now=True)),
                ('day_expire', models.DateField(auto_now=True)),
                ('send_status', models.BooleanField(default=False)),
                ('is_sended', models.CharField(choices=[('a', 'Ενεργό'), {'b', 'Στάλθηκε.'}], default='a', max_length=1)),
                ('print_status', models.BooleanField(default=False)),
                ('is_printed', models.CharField(choices=[('a', 'Ενεργό'), {'b', 'Εκτυπώθηκε.'}], default='a', max_length=1)),
                ('consume_to_order', models.BooleanField(default=False, verbose_name='Μετατροπή σε Τιμολόγιο.')),
            ],
        ),
        migrations.CreateModel(
            name='PreOrderStatementItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.DecimalField(decimal_places=2, max_digits=5)),
                ('day_added', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PreOrderStatementNewItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('qty', models.DecimalField(decimal_places=2, max_digits=6)),
                ('price_buy', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Τιμή Αγοράς')),
                ('discount_buy', models.IntegerField(default=0, verbose_name='Εκπτωση Τιμολογίου')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=6, verbose_name='Τιμή Λιανικής')),
                ('sku', models.CharField(blank=True, max_length=50, null=True)),
                ('day_added', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5)),
            ],
            options={
                'verbose_name': 'Μονάδα Μέτρησης  ',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='WarehouseOrderImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(null=True, upload_to=inventory_manager.models.upload_image, validators=[inventory_manager.models.validate_file])),
                ('is_first', models.BooleanField(default=True)),
                ('order_related', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_manager.Order')),
            ],
        ),
    ]
